// <auto-generated />
using System;
using AnimeMacrocosm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimeMacrocosm.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class PostsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimeMacrocosm.Models.AnimeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatorAuthorId");

                    b.Property<string>("Description");

                    b.Property<int>("DistributorId");

                    b.Property<int>("FormatId");

                    b.Property<int>("ImageId");

                    b.Property<int>("ProductionId");

                    b.Property<DateTime?>("ReleaseDate");

                    b.Property<string>("RunTime");

                    b.Property<int>("SeriesId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("AnimeItems");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.CreatorAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("CreatorAuthors");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Distributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DistributorName");

                    b.HasKey("Id");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Format", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormatName");

                    b.HasKey("FormatId");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreType");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.MangaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatorAuthorId");

                    b.Property<string>("Description");

                    b.Property<int>("DistributorId");

                    b.Property<int>("FormatId");

                    b.Property<int>("ImageId");

                    b.Property<int>("PageCount");

                    b.Property<DateTime?>("ReleaseDate");

                    b.Property<int>("SeriesId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MangaItems");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserRefId");

                    b.Property<string>("PostContent");

                    b.Property<DateTime>("PostDate");

                    b.Property<string>("PostTitle")
                        .HasMaxLength(100);

                    b.HasKey("PostId");

                    b.HasIndex("ApplicationUserRefId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.ProductionStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductionStudioName");

                    b.HasKey("Id");

                    b.ToTable("ProductionStudios");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Series", b =>
                {
                    b.Property<int>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("SeriesId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.SeriesCreator", b =>
                {
                    b.Property<int>("CreatorId");

                    b.Property<int>("SeriesId");

                    b.HasKey("CreatorId", "SeriesId");

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesCreators");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmailAddress");

                    b.Property<string>("UserScreenName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.Post", b =>
                {
                    b.HasOne("AnimeMacrocosm.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("ApplicationUserRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AnimeMacrocosm.Models.SeriesCreator", b =>
                {
                    b.HasOne("AnimeMacrocosm.Models.CreatorAuthor", "CreatorAuthor")
                        .WithMany("SeriesCreators")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AnimeMacrocosm.Models.Series", "Series")
                        .WithMany("SeriesCreators")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
